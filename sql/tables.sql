CREATE TABLE USERS (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL
);

CREATE TABLE COURSE (
    id SERIAL PRIMARY KEY,
    course_name VARCHAR(255) NOT NULL,
    description TEXT,
    created_by INT REFERENCES USERS(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE QUIZ (
    id SERIAL PRIMARY KEY,
    quiz_name VARCHAR(255) NOT NULL,
    description TEXT,
    course_id INT REFERENCES COURSE(id) ON DELETE CASCADE,
    created_by INT REFERENCES USERS(id) ON DELETE SET NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL
);

CREATE TABLE TAG (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE QUIZ_TAG (
    quiz_id INT REFERENCES QUIZ(id) ON DELETE CASCADE,
    tag_id INT REFERENCES TAG(id) ON DELETE CASCADE,
    PRIMARY KEY (quiz_id, tag_id)
);

CREATE TABLE QUESTION (
    id SERIAL PRIMARY KEY,
    question_text TEXT NOT NULL,
    question_type VARCHAR(50) NOT NULL,
    quiz_id INT REFERENCES QUIZ(id) ON DELETE CASCADE
);


CREATE TABLE OPTION (
    id SERIAL PRIMARY KEY,
    option_text TEXT NOT NULL,
    is_correct BOOLEAN NOT NULL,
    question_id INT REFERENCES QUESTION(id) ON DELETE CASCADE
);


CREATE TABLE RESULT (
    id SERIAL PRIMARY KEY,
    user_id INT REFERENCES USERS(id) ON DELETE CASCADE,
    quiz_id INT REFERENCES QUIZ(id) ON DELETE CASCADE,
    total_score INT,
    passed BOOLEAN NOT NULL
);

CREATE TABLE RESPONSE (
    id SERIAL PRIMARY KEY,
    user_id INT REFERENCES USERS(id) ON DELETE CASCADE,
    question_id INT REFERENCES QUESTION(id) ON DELETE CASCADE,
    option_id INT REFERENCES OPTION(id) ON DELETE SET NULL,
    submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

